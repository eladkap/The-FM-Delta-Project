#!/bin/bash

#this script creates statistics file named 'stats'

# stats fields:
# level file_name file_source_size file_compressed_size decompression_time decompression_ratio

#parameters
#1 = files number



let i=1
let p=1

while [ $i -le $1 ]; do # scan all files
	#echo "index=$i"
	level=-1
	
	
	# retrieve source file fields
	cd ..
	cd packet_files
	source_record=( `ls -l | grep packets_100k_1_10_noarr_$i.bin` )
		
	#retrieve source file name
	file_name=${source_record[8]}
	
	# retrieve source file size
	source_size=${source_record[4]}
	
	
	
	while (( level <= 9 )); do # scan all values of level					
		
		if [ $level -ne 0 ]; then
			cd ..
			cd zlib
				
			./zpipe $level < ../packet_files/packets_100k_1_10_noarr_$i.bin > compressed$i.bin # compression function
			
			begin_time_ms=$(($(date +%s%N)/1000)) # time in micro seconds
			./zpipe -d $level < compressed$i.bin > source$i.bin # decompression function
			end_time_ms=$(($(date +%s%N)/1000)) # time in nanoseconds
			
			let diff=$end_time_ms-$begin_time_ms # calc time compression
			let sum_time=sum_time+diff
			
			# retrieve compressed file fields
			compressed_record=( `ls -l | grep compressed$i.bin` )
			
			# retrieve compressed file size
			compressed_size=${compressed_record[4]}


		path="../stats_zlib/100k_1_10_noarr/stats_zlib_100k_1_10_noarr_"

		echo -n -e "$level\t" >> $path$i.txt
		echo -n -e "$source_size\t" >> $path$i.txt
		echo -n -e "$compressed_size\t" >> $path$i.txt
		echo -n -e "$diff\t" >> $path$i.txt						
		echo ""  >> $path$i.txt	

		fi
		
			
			
		
		
		
		let p=p+1
		let level=level+1
	done
	let i++
done


rm -f *.bin



